{"/Users/jbt/projects/ts-zod-decorators/src/index.ts":{"path":"/Users/jbt/projects/ts-zod-decorators/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":3,"2":3,"3":3,"4":3,"5":3,"6":9,"7":3,"8":0,"9":0,"10":0,"11":1,"12":3,"13":3,"14":3,"15":1,"16":1,"17":1,"18":1},"f":{"0":3,"1":9,"2":0,"3":3},"b":{"0":[1,1,1],"1":[1,0],"2":[3,0],"3":[3,0],"4":[3,3],"5":[0,3],"6":[3,0],"7":[0,0],"8":[1,1,1],"9":[3,0],"10":[3,3]},"inputSourceMap":{"version":3,"file":"/Users/jbt/projects/ts-zod-decorators/src/index.ts","sources":["/Users/jbt/projects/ts-zod-decorators/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,uDAAqC;AACrC,yDAAuC;AACvC,wDAAsC","sourcesContent":["export * from './validate.decorator';\nexport * from './zod-output.decorator';\nexport * from './zod-input.decorator';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"57c2a6e85cf597e6dee15386350f8f8284408b52","contentHash":"b8c299d8f80e60ca1ed0d3a3670287aa3f0bdb332ddcce00aba1066708684c9b"},"/Users/jbt/projects/ts-zod-decorators/src/validate.decorator.ts":{"path":"/Users/jbt/projects/ts-zod-decorators/src/validate.decorator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":17},"end":{"line":17,"column":1}},"4":{"start":{"line":6,"column":27},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":4},"end":{"line":16,"column":6}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":75}},"7":{"start":{"line":9,"column":23},"end":{"line":9,"column":55}},"8":{"start":{"line":10,"column":26},"end":{"line":10,"column":32}},"9":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":39}},"11":{"start":{"line":13,"column":12},"end":{"line":13,"column":87}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":54},"end":{"line":17,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":23},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":48},"end":{"line":16,"column":5}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},{"start":{"line":11,"column":8},"end":{"line":14,"column":9}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":4,"6":5,"7":4,"8":4,"9":4,"10":4,"11":4,"12":3,"13":1},"f":{"0":4,"1":5},"b":{"0":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/jbt/projects/ts-zod-decorators/src/validate.decorator.ts","sources":["/Users/jbt/projects/ts-zod-decorators/src/validate.decorator.ts"],"names":[],"mappings":";;;AACA,uDAA6C;AAEtC,MAAM,QAAQ,GAAoB,CACxC,MAAc,EACd,WAA4B,EAC5B,UAA8B,EAC7B,EAAE;IACH,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IACxC,UAAU,CAAC,KAAK,GAAG,KAAK,WAAW,GAAG,IAAe;QACpD,yBAAY,CAAC,aAAa,CAAC,MAAM,EAAE,WAAqB,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,WAAW,GAAG,MAAM,CAAC;QACzB,IAAI,MAAM,YAAY,OAAO,EAAE;YAC9B,WAAW,GAAG,MAAM,MAAM,CAAC;YAC3B,yBAAY,CAAC,cAAc,CAAC,MAAM,EAAE,WAAqB,EAAE,WAAW,CAAC,CAAC;SACxE;QACD,OAAO,WAAW,CAAC;IACpB,CAAC,CAAC;AACH,CAAC,CAAC;AAhBW,QAAA,QAAQ,YAgBnB","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport ZodValidator from './validator.class';\n\nexport const Validate: MethodDecorator = (\n\ttarget: Object,\n\tpropertyKey: string | symbol,\n\tdescriptor: PropertyDescriptor,\n) => {\n\tconst originalMethod = descriptor.value;\n\tdescriptor.value = async function (...args: unknown[]) {\n\t\tZodValidator.validateInput(target, propertyKey as string, args);\n\t\tconst result = originalMethod.apply(this, args);\n\t\tlet resultValue = result;\n\t\tif (result instanceof Promise) {\n\t\t\tresultValue = await result;\n\t\t\tZodValidator.validateOutput(target, propertyKey as string, resultValue);\n\t\t}\n\t\treturn resultValue;\n\t};\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63af17a4575402e30b73c2191ca97281fb301415","contentHash":"d71ac4951409f3c5fa9f665947cbec64c416e7dfac7c484995725e936483994d"},"/Users/jbt/projects/ts-zod-decorators/src/validator.class.ts":{"path":"/Users/jbt/projects/ts-zod-decorators/src/validator.class.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":23},"end":{"line":5,"column":58}},"2":{"start":{"line":6,"column":8},"end":{"line":9,"column":9}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":33}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":58}},"5":{"start":{"line":10,"column":23},"end":{"line":10,"column":47}},"6":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":64}},"8":{"start":{"line":13,"column":12},"end":{"line":13,"column":47}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":46}},"10":{"start":{"line":18,"column":23},"end":{"line":18,"column":58}},"11":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":33}},"13":{"start":{"line":21,"column":12},"end":{"line":21,"column":58}},"14":{"start":{"line":23,"column":23},"end":{"line":23,"column":47}},"15":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":65}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":47}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":39}},"19":{"start":{"line":31,"column":34},"end":{"line":31,"column":69}},"20":{"start":{"line":32,"column":25},"end":{"line":32,"column":58}},"21":{"start":{"line":33,"column":8},"end":{"line":37,"column":9}},"22":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"23":{"start":{"line":35,"column":16},"end":{"line":35,"column":51}},"24":{"start":{"line":40,"column":34},"end":{"line":40,"column":69}},"25":{"start":{"line":41,"column":25},"end":{"line":41,"column":58}},"26":{"start":{"line":42,"column":8},"end":{"line":42,"column":45}},"27":{"start":{"line":45,"column":0},"end":{"line":45,"column":31}},"28":{"start":{"line":46,"column":0},"end":{"line":46,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":90},"end":{"line":16,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":76},"end":{"line":29,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":58},"end":{"line":38,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":54},"end":{"line":43,"column":5}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":9,"column":9}},{"start":{"line":6,"column":8},"end":{"line":9,"column":9}}],"line":6},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},{"start":{"line":11,"column":8},"end":{"line":14,"column":9}}],"line":11},"2":{"loc":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},{"start":{"line":19,"column":8},"end":{"line":22,"column":9}}],"line":19},"3":{"loc":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},{"start":{"line":24,"column":8},"end":{"line":27,"column":9}}],"line":24},"4":{"loc":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},{"start":{"line":34,"column":12},"end":{"line":36,"column":13}}],"line":34}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":3,"11":3,"12":2,"13":2,"14":3,"15":3,"16":2,"17":2,"18":3,"19":5,"20":5,"21":5,"22":3,"23":3,"24":4,"25":4,"26":4,"27":1,"28":1},"f":{"0":2,"1":3,"2":5,"3":4},"b":{"0":[2,0],"1":[2,0],"2":[2,1],"3":[2,1],"4":[3,0]},"inputSourceMap":{"version":3,"file":"/Users/jbt/projects/ts-zod-decorators/src/validator.class.ts","sources":["/Users/jbt/projects/ts-zod-decorators/src/validator.class.ts"],"names":[],"mappings":";;AAWA,MAAqB,YAAY;IAGhC,MAAM,CAAC,sCAAsC,CAC5C,MAAc,EACd,UAAsB,EACtB,UAAkB,EAClB,MAAsB;QAEtB,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;QACpD,IAAI,CAAC,QAAQ,EAAE;YACd,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAC9C;QACD,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,EAAE;YACd,QAAQ,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;YACpD,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACnC;QACD,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,oCAAoC,CAAC,MAAc,EAAE,UAAsB,EAAE,MAAsB;QACzG,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;QACpD,IAAI,CAAC,QAAQ,EAAE;YACd,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAC9C;QACD,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,EAAE;YACd,QAAQ,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;YACrD,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACnC;QACD,QAAQ,CAAC,YAAY,GAAG,MAAM,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,MAAc,EAAE,UAAkB,EAAE,WAAsB;QAC9E,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;QAC/D,MAAM,QAAQ,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;QACpD,KAAK,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE;YACnD,IAAI,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC9C,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;aACnC;SACD;IACF,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,MAAc,EAAE,UAAkB,EAAE,MAAe;QACxE,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;QAC/D,MAAM,QAAQ,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;QACpD,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;;AAlDF,+BAmDC;AAlDe,+BAAkB,GAA2C,IAAI,GAAG,EAAE,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport * as z from 'zod';\n\ntype Target = Object;\ntype MethodName = string;\ntype Metadata = {\n\tparamsIndex: number[];\n\tinputSchema?: z.AnyZodObject;\n\toutputSchema?: z.AnyZodObject;\n};\n\nexport default class ZodValidator {\n\tprivate static methodValidatorMap: Map<Target, Map<MethodName, Metadata>> = new Map();\n\n\tstatic registerInputParameterValidationSchema(\n\t\ttarget: Object,\n\t\tmethodName: MethodName,\n\t\tparamIndex: number,\n\t\tschema: z.AnyZodObject,\n\t) {\n\t\tlet paramMap = this.methodValidatorMap.get(target)!;\n\t\tif (!paramMap) {\n\t\t\tparamMap = new Map();\n\t\t\tthis.methodValidatorMap.set(target, paramMap);\n\t\t}\n\t\tlet metadata = paramMap.get(methodName)!;\n\t\tif (!metadata) {\n\t\t\tmetadata = { paramsIndex: [], inputSchema: schema };\n\t\t\tparamMap.set(methodName, metadata);\n\t\t}\n\t\tmetadata.paramsIndex.push(paramIndex);\n\t}\n\n\tstatic registerMethodValidationOutputSchema(target: Object, methodName: MethodName, schema: z.AnyZodObject) {\n\t\tlet paramMap = this.methodValidatorMap.get(target)!;\n\t\tif (!paramMap) {\n\t\t\tparamMap = new Map();\n\t\t\tthis.methodValidatorMap.set(target, paramMap);\n\t\t}\n\t\tlet metadata = paramMap.get(methodName)!;\n\t\tif (!metadata) {\n\t\t\tmetadata = { paramsIndex: [], outputSchema: schema };\n\t\t\tparamMap.set(methodName, metadata);\n\t\t}\n\t\tmetadata.outputSchema = schema;\n\t}\n\n\tstatic validateInput(target: Object, methodName: string, paramValues: unknown[]) {\n\t\tconst methodMetadataMap = this.methodValidatorMap.get(target)!;\n\t\tconst metadata = methodMetadataMap.get(methodName)!;\n\t\tfor (const [index, input] of paramValues.entries()) {\n\t\t\tif (metadata.paramsIndex.indexOf(index) != -1) {\n\t\t\t\tmetadata.inputSchema?.parse(input);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic validateOutput(target: Object, methodName: string, output: unknown) {\n\t\tconst methodMetadataMap = this.methodValidatorMap.get(target)!;\n\t\tconst metadata = methodMetadataMap.get(methodName)!;\n\t\tmetadata.outputSchema?.parse(output);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d0e04769c384ae4ed9bdf11a1b741cd2aa3be362","contentHash":"c87d3b82903e0ca49f9427e0f50de344909af02b1acfe29488343c7a039fdc42"},"/Users/jbt/projects/ts-zod-decorators/src/zod-output.decorator.ts":{"path":"/Users/jbt/projects/ts-zod-decorators/src/zod-output.decorator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":146}},"4":{"start":{"line":5,"column":30},"end":{"line":5,"column":146}},"5":{"start":{"line":5,"column":55},"end":{"line":5,"column":146}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":18},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":30},"end":{"line":5,"column":146}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":30},"end":{"line":5,"column":31}},"loc":{"start":{"line":5,"column":55},"end":{"line":5,"column":146}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1},"f":{"0":3,"1":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/jbt/projects/ts-zod-decorators/src/zod-output.decorator.ts","sources":["/Users/jbt/projects/ts-zod-decorators/src/zod-output.decorator.ts"],"names":[],"mappings":";;;AACA,uDAA6C;AAEtC,MAAM,SAAS,GACrB,CAAyB,MAAS,EAAmB,EAAE,CACvD,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,CACvB,yBAAY,CAAC,oCAAoC,CAAC,MAAM,EAAE,WAAqB,EAAE,MAAM,CAAC,CAAC;AAH9E,QAAA,SAAS,aAGqE","sourcesContent":["import { AnyZodObject } from 'zod';\nimport ZodValidator from './validator.class';\n\nexport const ZodOutput =\n\t<T extends AnyZodObject>(schema: T): MethodDecorator =>\n\t(target, propertyKey) =>\n\t\tZodValidator.registerMethodValidationOutputSchema(target, propertyKey as string, schema);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"90564d4057d6e65bb00c06c082be45a6c14862c5","contentHash":"4a3cfd3e72e00cdffc255dfb377805b045670c45faedceb2d782d28b26e95744"},"/Users/jbt/projects/ts-zod-decorators/src/zod-input.decorator.ts":{"path":"/Users/jbt/projects/ts-zod-decorators/src/zod-input.decorator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":179}},"4":{"start":{"line":5,"column":29},"end":{"line":5,"column":179}},"5":{"start":{"line":5,"column":70},"end":{"line":5,"column":179}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":29},"end":{"line":5,"column":179}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":29},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":70},"end":{"line":5,"column":179}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":1},"f":{"0":2,"1":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/jbt/projects/ts-zod-decorators/src/zod-input.decorator.ts","sources":["/Users/jbt/projects/ts-zod-decorators/src/zod-input.decorator.ts"],"names":[],"mappings":";;;AACA,uDAA6C;AAEtC,MAAM,QAAQ,GACpB,CAAyB,MAAS,EAAsB,EAAE,CAC1D,CAAC,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,EAAE,CACvC,yBAAY,CAAC,sCAAsC,CAAC,MAAM,EAAE,WAAqB,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;AAHhG,QAAA,QAAQ,YAGwF","sourcesContent":["import { AnyZodObject } from 'zod';\nimport ZodValidator from './validator.class';\n\nexport const ZodInput =\n\t<T extends AnyZodObject>(schema: T): ParameterDecorator =>\n\t(target, propertyKey, parameterIndex) =>\n\t\tZodValidator.registerInputParameterValidationSchema(target, propertyKey as string, parameterIndex, schema);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9ab347c01a0f34860155ae3ea4ca8760246bf95","contentHash":"59b678632f5c3b7edde8573211cc8e6a21d87f3f9e76ebf9876ac163da411a86"}}